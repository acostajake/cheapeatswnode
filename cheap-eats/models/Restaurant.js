const mongoose = require('mongoose');
const slug = require('slug');

mongoose.Promise = global.Promise;

const restaurantSchema = new mongoose.Schema({
    name: {
        type: String,
        trim: true,
        required: 'Please enter a restaurant name'
    },
    slug: String,
    description: {
        type: String,
        trim: true
    },
    tags: [String],
    createdAt: {
        type: Date,
        default: Date.now()
    },
    location: {
        type: {
            type: String,
            default: 'Point'
        },
        coordinates: [{
            type: Number,
            required: 'You must give a location'
        }],
        address: {
            type: String,
            required: 'We need an address!'
        }
    },
    photo: String
});

// slugs autogenerated by mongodb for new places
restaurantSchema.pre('save', function(next) {
    if(!this.isModified('name')) {
        return next();
    }
    this.slug = slug(this.name);

    // handle duplicated names being returned
    const checkSlug = new RegExp(`^(${this.slug})((-[0-9]*)?)$`, 'i');
    const storesWithSlug = await this.constructor.find({ restaurant: slugRegExp });
    if(storesWithSlug.length) {
        this.slug = `${this.slug}-${storesWithSlug.length + 1}`
    }

    next();
});

module.exports = mongoose.model('Restaurant', restaurantSchema);